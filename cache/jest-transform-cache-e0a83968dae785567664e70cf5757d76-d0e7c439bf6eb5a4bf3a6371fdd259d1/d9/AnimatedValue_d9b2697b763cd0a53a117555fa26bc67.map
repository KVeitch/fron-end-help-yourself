{"version":3,"sources":["AnimatedValue.js"],"names":["AnimatedValue","value","__detachAnimation","_animation","Platform","OS","_updateValue","config","InternalAnimatedValue"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;IAGqBA,a;;;;;;;;;;6BACVC,K,EAAO;AACd,WAAKC,iBAAL,CAAuB,KAAKC,UAA5B;;AACA,UAAIC,sBAASC,EAAT,KAAgB,KAApB,EAA2B;AACzB,aAAKC,YAAL,CAAkBL,KAAlB;AACD,OAFD,MAEO;AACL,wCAAa,oCAAI,IAAJ,EAAUA,KAAV,CAAb,EAA+B,IAA/B;AACD;AACF;;;gCAEWM,M,EAAQ;AAClB,aAAO,2BAAY,IAAZ,EAAkBA,MAAlB,CAAP;AACD;;;EAZwCC,8B","sourcesContent":["import { createAnimatedSet as set } from '../core/AnimatedSet';\nimport interpolate from '../derived/interpolate';\nimport InternalAnimatedValue from './InternalAnimatedValue';\nimport { evaluateOnce } from '../derived/evaluateOnce';\nimport { Platform } from 'react-native';\n\n// Animated value wrapped with extra methods for omit cycle of dependencies\nexport default class AnimatedValue extends InternalAnimatedValue {\n  setValue(value) {\n    this.__detachAnimation(this._animation);\n    if (Platform.OS === 'web') {\n      this._updateValue(value);\n    } else {\n      evaluateOnce(set(this, value), this);\n    }\n  }\n\n  interpolate(config) {\n    return interpolate(this, config);\n  }\n}\n"]}